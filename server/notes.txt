When starting a backend end server from scratch:
- install prisma using the quick start guide
   - model the data on prisma then migrate the dev (npx prisma migrate dev)

- after then create a seed file where you can create the prisma dummy database

- then after you write your seed queries in your seed file, run your seed file through `npx ts-node prisma/seed.ts`

-then to double check `npx prisma studio` is the information is seeded from the query

What I learned so far:
-when I am creating a backend using prisma, do the quick start guide, then 
- create the REST endpoints in the server/app file then implement the prisma create, change, get, and delete functions using express js
- Used middleware zod for variables typescripting to prevent extensive if statements for typeof string
- also used the coffeeRouter to route the coffee and tied it back to server.ts
   - when creating the router, don't put the endpoint until it is being used in the server and in the router use the "/" and have the end point "/coffee", for example, in the server.ts
   -naming convention for router is name.router.ts
-next i would go to middleware video and write down error handling to prevent the server shutdown if there is an error

-i created db.setup in prisma folder to have an automatic file to access prisma for the AuthRouter and future folder structures

-i created an authRouter and auth.utils.ts file 
   -in the auth.utils file i used a function that uses saltRounds to create a crypt token for a passwordHash for the associated user
      -in the seed file i refactored the testUsernames to use that uses the encrypt function from auth.utils
   -in the authRouter file i used zod and zod middleware to take care of my requirements if there is no information which can be shown when using POST in postman
      - i used validateRequest middleware for the login enpoint and use the bcrypt compare function to the password that i used to login and the passwordHash associated with it
-next i would try to implement the JWT token to identify me as the desired user 
-then I would try to connect the backend server to communicate the frontend server
